ARG BUILDER_IMAGE
FROM $BUILDER_IMAGE as builder
WORKDIR /workspace

RUN --mount=type=bind,rw,target=. \
    hack/build-mariner-based-imgs/slim-build.sh /build \
      cmd/virt-launcher \
      cmd/virt-launcher-monitor \
      cmd/virt-freezer \
      cmd/virt-probe


#FROM mcr.microsoft.com/cbl-mariner/base/core:2.0@sha256:997710e0e84781c1243f927ceafe0f1082d09e318b4f9f222bd82d057b4470cf
FROM azurelinuxpreview.azurecr.io/public/azurelinux/base/core:3.0
ARG TARGETARCH="amd64"

#RUN tdnf -y install mariner-repos-extended.noarch
#RUN tdnf -y install mariner-repos-preview
RUN tdnf -y install \
  augeas \
  ca-certificates \
  iptables \
  libcap \
  libvirt-client \
  libvirt-daemon-driver-qemu \
  nftables \
  qemu-device-usb-redirect \
  qemu-tools \
  socat \
  tar \
  xorriso \
  procps

RUN if [ "$TARGETARCH" = "amd64" ]; then \
    # required for OVMF files \
    tdnf -y install  edk2-ovmf; \
    tdnf -y install qemu-system-x86; \
    ln -s ../edk2/ovmf/OVMF_CODE.fd /usr/share/OVMF/OVMF_CODE.cc.fd; \
    fi;

# XXX - This will not run as edk2 is not built for arm64
RUN if [ "$TARGETARCH" = "arm64" ]; then \
    # required for OVMF files  \
    tdnf -y install  edk2-aarch64; \
    tdnf -y install qemu-system-aarch64; \
    fi;

RUN  tdnf clean all \
   && cd /var && rm -rf run && ln -s ../run .

# Now install components needed for cloud-hypervisor
RUN tdnf -y update \
    && tdnf -y install dnf dnf-plugins-core \
    && dnf -y builddep libvirt \
    && tdnf -y install libvirt \
    && systemctl disable libvirtd.service \
    && tdnf install -y git kernel-headers curl-devel

RUN git config --global http.sslVerify false \
    && git clone -b mshv https://github.com/praveen-pk/libvirt \
    && cd libvirt/ \
    && git checkout 3ce89f909f6a417055c2ea7a724949bc2fabf482 \
    && git submodule update --init --recursive subprojects/keycodemapdb/

RUN cd libvirt \
    && meson build --prefix=/ --libdir=usr/lib -Dapparmor=disabled -Ddocs=disabled -Ddriver_openvz=disabled -Ddriver_vbox=disabled -Ddriver_esx=disabled -Dstorage_iscsi_direct=disabled -Ddriver_qemu=disabled -Ddriver_ch=enabled -Ddriver_qemu=disabled -Dfirewalld=disabled -Dpolkit=disabled \
    && ninja -C build

RUN tdnf -y install vim wget

USER 0

# Copy files from the builder
COPY --from=builder /build/_out/cmd/container-disk-v2alpha/container-disk /usr/bin/
COPY --from=builder /build/_out/cmd/virt-launcher/virt-launcher /usr/bin/
COPY --from=builder /build/_out/cmd/virt-launcher-monitor/virt-launcher-monitor /usr/bin/
COPY --from=builder /build/_out/cmd/virt-freezer/virt-freezer /usr/bin/
COPY --from=builder /build/_out/cmd/virt-probe/virt-probe /usr/bin/
COPY --from=builder /build/cmd/virt-launcher/node-labeller/node-labeller.sh /usr/bin/

RUN mkdir -p /usr/share/kube-virt/virt-launcher
COPY --from=builder /build/cmd/virt-launcher/qemu.conf /usr/share/kube-virt/virt-launcher/
COPY --from=builder /build/cmd/virt-launcher/virtqemud.conf /usr/share/kube-virt/virt-launcher/
COPY --from=builder /build/cmd/virt-launcher/nsswitch.conf /usr/share/kube-virt/virt-launcher/


# Setup permissions and capabilities for non-root VMIs. KubeVirt sets
# XDG_* directories to /var/run.
RUN setcap 'cap_net_bind_service=+ep' /usr/bin/virt-launcher
RUN setcap 'cap_net_bind_service=+ep' /usr/bin/virt-launcher-monitor
RUN chmod 0755 /etc/libvirt

RUN cp /libvirt/build/src/virtlogd /usr/sbin/
RUN cp /libvirt/build/src/libvirtd /usr/sbin/

RUN cp /libvirt/build/src/libvirtd.conf /etc/libvirt/
RUN cp /libvirt/src/logging/virtlogd.conf /etc/libvirt/
RUN cp /usr/share/kube-virt/virt-launcher/nsswitch.conf /etc/

RUN echo "log_level = 1" >> /etc/libvirt/libvirtd.conf
RUN echo "log_outputs=\"1:file:/var/log/libvirt/libvirtd.log\"" >> /etc/libvirt/libvirtd.conf

RUN ls /usr/bin/virt-launcher

RUN mkdir /run/lock

# Add more tools in virt-launcher for generating cloudinit for CH VMs
RUN tdnf install -y dosfstools

RUN curl -sSf https://sh.rustup.rs | sh -s -- -y \
    && source "$HOME/.cargo/env" \
    && export CLOUDH=$HOME/cloud-hypervisor \
    && mkdir $CLOUDH \
    && cd $CLOUDH \
    && git clone -b mshv https://github.com/praveen-pk/cloud-hypervisor.git \
    && cd cloud-hypervisor \
    && git checkout 7ee81ecf253e1b9021d35eb19be7cb65aa3893b0 \
    && cargo build --release --features mshv \
    && setcap cap_net_admin+ep ./target/release/cloud-hypervisor \
    && cp ./target/release/cloud-hypervisor /usr/bin/

ENTRYPOINT [ "/usr/bin/virt-launcher" ]
